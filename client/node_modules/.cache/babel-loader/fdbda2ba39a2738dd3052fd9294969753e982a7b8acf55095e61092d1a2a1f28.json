{"ast":null,"code":"var _jsxFileName = \"/Users/aminsuaad/BCP/client/src/Results.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const location = useLocation();\n  const {\n    userInfo,\n    prediction\n  } = location.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Prediction Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Input:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\",\n          padding: 0\n        },\n        children: Object.entries(userInfo).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key.replace(/_/g, \" \"), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), \" \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Predicted Diagnosis: \", prediction === \"B\" ? \"Benign\" : \"Malignant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","Results","_s","location","userInfo","prediction","state","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","listStyleType","Object","entries","map","key","value","replace","marginTop","_c","$RefreshReg$"],"sources":["/Users/aminsuaad/BCP/client/src/Results.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Results = () => {\n  const location = useLocation();\n  const { userInfo, prediction } = location.state;\n\n  return (\n    <div style={{ padding: \"20px\", textAlign: \"center\" }}>\n      <h1>Prediction Results</h1>\n      <div style={{ margin: \"20px 0\" }}>\n        <h2>Your Input:</h2>\n        <ul style={{ listStyleType: \"none\", padding: 0 }}>\n          {Object.entries(userInfo).map(([key, value]) => (\n            <li key={key}>\n              <strong>{key.replace(/_/g, \" \")}:</strong> {value}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <h2>Predicted Diagnosis: {prediction === \"B\" ? \"Benign\" : \"Malignant\"}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,QAAQ;IAAEC;EAAW,CAAC,GAAGF,QAAQ,CAACG,KAAK;EAE/C,oBACEN,OAAA;IAAKO,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnDV,OAAA;MAAAU,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bd,OAAA;MAAKO,KAAK,EAAE;QAAEQ,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,gBAC/BV,OAAA;QAAAU,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBd,OAAA;QAAIO,KAAK,EAAE;UAAES,aAAa,EAAE,MAAM;UAAER,OAAO,EAAE;QAAE,CAAE;QAAAE,QAAA,EAC9CO,MAAM,CAACC,OAAO,CAACd,QAAQ,CAAC,CAACe,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBACzCrB,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAAU,QAAA,GAASU,GAAG,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAC,GAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACO,KAAK;QAAA,GAD1CD,GAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNd,OAAA;MAAKO,KAAK,EAAE;QAAEgB,SAAS,EAAE;MAAO,CAAE;MAAAb,QAAA,eAChCV,OAAA;QAAAU,QAAA,GAAI,uBAAqB,EAACL,UAAU,KAAK,GAAG,GAAG,QAAQ,GAAG,WAAW;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtBID,OAAO;EAAA,QACMH,WAAW;AAAA;AAAA0B,EAAA,GADxBvB,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}