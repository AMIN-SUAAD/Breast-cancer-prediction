{"ast":null,"code":"var _jsxFileName = \"/Users/aminsuaad/BCP/client/src/Results.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const location = useLocation();\n  const {\n    userInfo,\n    prediction\n  } = location.state;\n  const capitalizeWords = string => {\n    return string.split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\",\n      backgroundColor: \"#ddd\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Prediction Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Input:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\",\n          padding: 0\n        },\n        children: Object.entries(userInfo).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [capitalizeWords(key.replace(/_/g, \" \")), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), \" \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Predicted Diagnosis: \", prediction === \"B\" ? \"Benign\" : \"Malignant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","Results","_s","location","userInfo","prediction","state","capitalizeWords","string","split","map","word","charAt","toUpperCase","slice","join","style","padding","textAlign","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","listStyleType","Object","entries","key","value","replace","marginTop","_c","$RefreshReg$"],"sources":["/Users/aminsuaad/BCP/client/src/Results.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Results = () => {\n  const location = useLocation();\n  const { userInfo, prediction } = location.state;\n\n  const capitalizeWords = (string) => {\n    return string\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  return (\n    <div style={{ padding: \"20px\", textAlign: \"center\", backgroundColor: \"#ddd\" }}>\n      <h1>Prediction Results</h1>\n      <div style={{ margin: \"20px 0\" }}>\n        <h2>Your Input:</h2>\n        <ul style={{ listStyleType: \"none\", padding: 0 }}>\n          {Object.entries(userInfo).map(([key, value]) => (\n            <li key={key}>\n              <strong>{capitalizeWords(key.replace(/_/g, \" \"))}:</strong>{\" \"}\n              {value}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <h2>\n          Predicted Diagnosis: {prediction === \"B\" ? \"Benign\" : \"Malignant\"}\n        </h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,QAAQ;IAAEC;EAAW,CAAC,GAAGF,QAAQ,CAACG,KAAK;EAE/C,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClC,OAAOA,MAAM,CACVC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3DC,IAAI,CAAC,GAAG,CAAC;EACd,CAAC;EAED,oBACEf,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,QAAQ;MAAEC,eAAe,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5EpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA;MAAKgB,KAAK,EAAE;QAAES,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,gBAC/BpB,OAAA;QAAAoB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBxB,OAAA;QAAIgB,KAAK,EAAE;UAAEU,aAAa,EAAE,MAAM;UAAET,OAAO,EAAE;QAAE,CAAE;QAAAG,QAAA,EAC9CO,MAAM,CAACC,OAAO,CAACxB,QAAQ,CAAC,CAACM,GAAG,CAAC,CAAC,CAACmB,GAAG,EAAEC,KAAK,CAAC,kBACzC9B,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAAoB,QAAA,GAASb,eAAe,CAACsB,GAAG,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAC,GAAC;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAAC,GAAG,EAC9DM,KAAK;QAAA,GAFCD,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNxB,OAAA;MAAKgB,KAAK,EAAE;QAAEgB,SAAS,EAAE;MAAO,CAAE;MAAAZ,QAAA,eAChCpB,OAAA;QAAAoB,QAAA,GAAI,uBACmB,EAACf,UAAU,KAAK,GAAG,GAAG,QAAQ,GAAG,WAAW;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhCID,OAAO;EAAA,QACMH,WAAW;AAAA;AAAAmC,EAAA,GADxBhC,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}